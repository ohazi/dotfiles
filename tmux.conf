# I generally try to avoid explicitly changing the default keybindings so that
# I'm not completely up a creek when I need to use an unfamiliar machine.


# I don't mind C-b, but some people prefer remapping the prefix. Apparently vim
# uses C-b, but I never use this.

# Remap prefix from C-b to C-a
#unbind C-b
#set-option -g prefix C-a
#bind-key C-a send-prefix

# Restore original prefix key
#unbind C-a
#set-option -g prefix C-b
#bind-key C-b send-prefix


# Use color terminal (tmux > 2.1)
# This seems to break mouse support when using some older versions of vim. It's
# not enough for our system to have a new, properly configured vim, any machine
# that we might ssh into also needs to have a newer vim, as this property is
# inherited as the $TERM variable over ssh.
set-option -g default-terminal "tmux-256color"

# Use color terminal (tmux < 2.1)
#set-option -g default-terminal "screen-256color"

# Use 24-bit color (tmux > 2.2)
set-option -ga terminal-overrides ",xterm*:Tc"

# Fix PgUp/PgDn scrolling
# This breaks scrollwheel scrolling in programs like less/man when mouse mode
# is off (strangely, scrollwheel scrolling doesn't seem to work at all when
# mouse mode is on).
#
# Disable use of the "alternate screen" so I can use the terminal's scrollback
set-option -ga terminal-overrides ",xterm*:smcup@:rmcup@"
#
# This is supposed to do something similar, but I haven't figured out how it
# works.
#set-option -g alternate-screen off

# Use xterm-style function key sequences. This breaks programs that are not
# expecting xterm-style function key sequences, and can be particularly nasty
# when using tmux* or screen* as your $TERM, since many of programs that *do*
# accept xterm-style function key sequences reasonably only expect them when
# your $TERM is xterm*. Sigh.
#
# I usually just change $TERM whenever I encounter this and can't easily modify
# the program to check $TERM for screen or tmux, but it's sort of a pain, and
# there's probably a better way to do it.
set-option -g xterm-keys on


# Enable mouse (tmux > 2.1)
set-option -gq mouse on

# Enable mouse (tmux < 2.1)
#set-window-option -gq mode-mouse on
#set-option -gq mouse-select-window on
#set-option -gq mouse-select-pane on
#set-option -gq mouse-resize-pane on


# Fix scrollwheel in less/man (wtf...)
# http://sc0ty.pl/2015/12/reasonable-mouse-support-in-tmux/
# https://github.com/sc0ty/config/blob/master/.tmux.conf
bind-key -n WheelUpPane \
    if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
    if-shell -Ft= "#{pane_in_mode}" \
        "send-keys -M ; send-keys -M ; send-keys -M" \
        "if-shell -Ft= \"#{mouse_any_flag}\" \
            \"send-keys -M\" \
            \"if-shell -Ft= '#{alternate_on}' \
                'send-keys Up Up Up' \
                'copy-mode -e'\""

bind-key -n WheelDownPane \
    if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
    if-shell -Ft= "#{pane_in_mode}" \
        "send-keys -M ; send-keys -M ; send-keys -M" \
        "if-shell -Ft= \"#{mouse_any_flag}\" \
            \"send-keys -M\" \
            \"if-shell -Ft= '#{alternate_on}' \
                'send-keys Down Down Down'\""


# start counting windows from 1
set-option -g base-index 1

# start counting panes from 1
set-option -g pane-base-index 1

# Renumber windows on window close
set-option -g renumber-windows on

# don't rename windows automatically (use this option to remember manually set
# window names). I haven't found this to be necessary when automatic-rename is
# working.
#set-option -g allow-rename off

# Enable window monitoring
set-option -g monitor-activity on
#set-option -g visual-activity on

# Update the status line more frequently
set-option -g status-interval 1


# Use vi style keybindings in copy mode
set-option -g mode-keys vi

# TODO: Test copy/paste stuff on local and remote sessions
# I haven't figured out what this actually does.
#set-option -g set-clipboard on
#set-option -ga terminal-overrides ",xterm*:Ms"

# I tried to define copy behavior using hooks, but this doesn't work yet
# https://github.com/tmux/tmux/issues/691
#set-hook -g after-copy-selection-and-cancel "run-shell 'tmux show-buffer | xsel -i -b'"

# Copy to system clipboard when we deliberately copy
bind-key -T copy-mode-vi Enter send-keys -X copy-selection-and-cancel \;\
                               run-shell "tmux show-buffer | xsel -i -b"

# Copy to middle-click clipboard when highlighting with mouse
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel \;\
                                           run-shell "tmux show-buffer | xsel -i -p"
# Copy from system clipboard into tmux paste buffer
bind-key v run "xsel -o -b | tmux load-buffer -"

# Copy from system clipboard into tmux paste buffer, and paste into window
bind-key C-v run "xsel -o -b | tmux load-buffer - ; tmux paste-buffer"


# Request focus events from terminal, if supported (haven't tested this)
set-option -g focus-events on


# Resize to smallest connected terminal by window rather than by session. I
# haven't figured out what this actually does.
#set-option -g aggressive-resize on


# Increase scrollback buffer size
set-option -g history-limit 10000

# Keep tmux history
#set-option -g history-file "~/.tmux_history"


# Use tmux titles as terminal emulator titles
set-option -g set-titles on
set-option -g set-titles-string "#T"

# I don't really need a clock
set-option -g status-right " \"#{=28:pane_title}\""
#set-option -g status-right-length 36

